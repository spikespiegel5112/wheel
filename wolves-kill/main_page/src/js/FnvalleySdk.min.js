!function (e) {
  var n = {};

  function o(t) {
    if (n[t]) return n[t].exports;
    var s = n[t] = {i: t, l: !1, exports: {}};
    return e[t].call(s.exports, s, s.exports, o), s.l = !0, s.exports
  }

  o.m = e, o.c = n, o.d = function (e, n, t) {
    o.o(e, n) || Object.defineProperty(e, n, {enumerable: !0, get: t})
  }, o.r = function (e) {
    "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {value: "Module"}), Object.defineProperty(e, "__esModule", {value: !0})
  }, o.t = function (e, n) {
    if (1 & n && (e = o(e)), 8 & n) return e;
    if (4 & n && "object" == typeof e && e && e.__esModule) return e;
    var t = Object.create(null);
    if (o.r(t), Object.defineProperty(t, "default", {
      enumerable: !0,
      value: e
    }), 2 & n && "string" != typeof e) for (var s in e) o.d(t, s, function (n) {
      return e[n]
    }.bind(null, s));
    return t
  }, o.n = function (e) {
    var n = e && e.__esModule ? function () {
      return e.default
    } : function () {
      return e
    };
    return o.d(n, "a", n), n
  }, o.o = function (e, n) {
    return Object.prototype.hasOwnProperty.call(e, n)
  }, o.p = "", o(o.s = 0)

}([function (e, n, o) {
  "use strict";
  o.r(n);
  const t = function () {
    let e = "pc", n = navigator.userAgent,
      o = (navigator.appVersion, n.indexOf("Android") > -1 || n.indexOf("Linux") > -1),
      s = !!n.match(/\(i[^;]+;( U;)? CPU.+Mac OS X/);
    o && (e = "android"), s && (e = "ios");
    let r = function () {
      return console.log("fnvalleyAgent"), "android" === e ? window.android.fnvalleyAgent() : window.webkit.messageHandlers.agent.postMessage(""), new Promise(function (e, n) {
        setTimeout(function () {
          null != t.agent ? e(t.agent) : n("agent is null!")
        }, 500)
      })
    }, c = function () {
      return console.log("userAccessToken"), "android" === e ? window.android.fnvalleyUserAccessToken() : window.webkit.messageHandlers.accessToken.postMessage(""), new Promise(function (e, n) {
        setTimeout(function () {
          null != t.accessToken ? e(t.accessToken) : n("agent is null!")
        }, 500)
      })
    }, i = function (n) {
      return console.log("refreshUserAccessToken"), "android" === e ? window.android.fnvalleyRefreshUserAccessToken() : window.webkit.messageHandlers.refreshAccessToken.postMessage(""), new Promise(function (e, n) {
        setTimeout(function () {
          null != t.refreshAccessToken ? e(t.refreshAccessToken) : n("agent is null!")
        }, 500)
      })
    }, a = function (n) {
      "android" === e ? window.android.fnvalleyOpenView(JSON.stringify(n)) : window.webkit.messageHandlers.openView.postMessage(n)
    };
    return function () {
      this.agent = r, this.userAccessToken = c, this.refreshUserAccessToken = i, this.openView = a
    }
  };
  t.prototype.check = function () {
    alert("check")
  }, t.prototype.accessToken = null, t.agent = null, t.prototype.refreshAccessToken = null, t.prototype.getAccessToken = function (e) {
    console.log("getAccessToken" + e.data), t.accessToken = e.data
  }, t.prototype.getAgent = function (e) {
    console.log("getAgent" + e.data), t.agent = e.data
  }, t.prototype.getRefreshAccessToken = function (e) {
    console.log("getRefreshAccessToken" + e.data), t.refreshAccessToken = e.data
  }, window.FnvalleySdk = t, n.default = t;

}]);

